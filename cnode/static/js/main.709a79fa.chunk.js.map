{"version":3,"sources":["utils/storage.js","store/actionTypes.js","store/reducer.js","store/index.js","server/index.js","server/api.js","store/actionCreates.js","utils/utils.js","components/Header.js","components/Footer.js","components/Login.js","components/Tips.js","components/paging.js","components/ImgTextList.js","components/Loading.js","components/TextList.js","components/UserList.js","components/DownClient.js","pages/Index/Index.js","pages/GetStart/GetStart.js","pages/ApiPage/ApiPage.js","pages/About/About.js","pages/Login/Login.js","components/AboutAuthor.js","components/Comment.js","components/ReplyCon.js","pages/ListInfo/ListInfo.js","components/MyList.js","pages/UserInfo/UserInfo.js","pages/NewTopic/NewTopic.js","pages/App.js","index.js"],"names":["storage","getSession","name","JSON","parse","window","sessionStorage","getItem","setSession","value","stringify","setItem","delSession","removeItem","getLocal","localStorage","setLocal","delLocal","SET_SEARCH_STATUS","SET_LOADING_STATUS","INDEX_GET_LIST","SAVE_PAGE_INDEX","SAVE_PAGE_TAB","SAVE_TAB_INDEX","SAVE_TOPCS_CONTENT","SAVE_USERINFO","SAVE_LOGIN_DIALOG","CHANGE_TIPS_STATUS","CHANGE_TIPS_TEXT","defaultState","userInfoData","isLoginDialog","searchStatus","loadingStatus","allIndexData","hotIndexData","coldIndexData","userIndexData","pageIndex","pageTab","tabIndex","topcsContent","tipsStatus","tipsText","reducer","state","action","type","Object","assign","data","all","hot","cold","user","index","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","axios","defaults","withCredentials","server","create","baseURL","timeout","headers","interceptors","request","use","config","loadingStatusAction","dispatch","err","Promise","reject","response","res","actionStatus","changeTipStatusAction","actionText","changeTipTextAction","responseText","error_msg","getTopicsInfo","id","url","method","postAccesstoken","token","accesstoken","postNewReplies","content","topic_id","postReplyUps","reply_id","postTopics","title","tab","getListAction","changePageIndexAction","saveLoginUserInfoAction","saveLoginDialogAction","getHomeData","props","a","page","limit","mdrender","mark","params","sort","b","visit_count","reverse","filter","item","transTypes","top","good","transTime","time","min","hour","day","month","year","t","Date","diff","getTime","obj","n","Math","floor","isLoginFunc","getState","Header","className","placeholder","this","topSearchStatus","onClick","setTopSearch","to","src","author","avatar_url","alt","Component","connect","Footer","Login","tokenValue","changeIsLoginDialog","onChange","inputChange","bind","submitLogin","e","setState","target","goLogin","console","log","success","actionLoginStatus","getLoginUserInfo","Tips","setTimeout","changeStatus","status","Paging","storeChange","Array","map","changePage","getData","ImgTextList","dataJson","loginname","create_at","reply_count","Loading","TextList","dataJSon","slice","UserList","DownClient","Index","tabList","changeTabIndex","changeTabIndexData","changePageIndexData","changePageTabData","changeTabIndexAction","changeTabDataAction","GetStart","ApiPage","About","AboutAuthor","point","Comment","valueText","changeValue","onFocus","isLogin","submitText","changeLoginDialogStatus","newRepliesFunc","ReplyCon","zanSatus","length","ups","i","upsdian","style","dangerouslySetInnerHTML","__html","replyUpsFunc","accessToken","ListInfo","match","is_collect","unCollectHandle","collectHandle","replies","collectData","topicId","getTopicInfoData","MyList","last_reply_at","UserInfo","userInfo","userCollect","recent_replies","recent_topics","score","getUserInfoData","getUserCollectData","NewTopic","titleValue","editorValue","disabled","html","submitTopic","issueTopicsFunc","history","push","App","path","exact","component","changeUserInfo","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.709a79fa.chunk.js","sourcesContent":["/*\r\n * @Author: your name\r\n * @Date: 2021-07-07 14:19:40\r\n * @LastEditTime: 2021-07-08 16:41:06\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\mapcoded:\\study\\React项目\\react_cnode\\src\\utils\\storage.js\r\n */\r\n\r\n// 封装sessionStorage和localStorage\r\n// sessionStorage和localStorage区别：\r\n// sessionStorage 一次会话\r\n// localStorage 永久\r\n\r\nconst storage = {\r\n  // session\r\n  // 获取session\r\n  getSession: (name) => {\r\n    if (!name) {\r\n      return false\r\n    }\r\n    return JSON.parse(window.sessionStorage.getItem(name))\r\n  },\r\n  // 设置session\r\n  setSession: (name, value) => {\r\n    if (!name) {\r\n      return false\r\n    }\r\n    if (value !== 'String') {\r\n      value = JSON.stringify(value)\r\n    }\r\n    window.sessionStorage.setItem(name, value)\r\n  },\r\n  // 删除session\r\n  delSession: (name) => {\r\n    if (!name) {\r\n      return false\r\n    }\r\n    return window.sessionStorage.removeItem(name)\r\n  },\r\n  // localStorage\r\n  getLocal: (name) => {\r\n    if (!name) {\r\n      return false\r\n    }\r\n    return JSON.parse(window.localStorage.getItem(name))\r\n  },\r\n  setLocal: (name, value) => {\r\n    if (!name) {\r\n      return false\r\n    }\r\n    if (value !== 'String') {\r\n      value = JSON.stringify(value)\r\n    }\r\n    window.localStorage.setItem(name, value)\r\n  },\r\n  delLocal: (name) => {\r\n    if (!name) {\r\n      return false\r\n    }\r\n    return window.localStorage.removeItem(name)\r\n  }\r\n}\r\n\r\nexport default storage","/*\r\n * @Author: your name\r\n * @Date: 2021-06-21 16:38:58\r\n * @LastEditTime: 2021-07-07 16:16:30\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\mapcoded:\\study\\React项目\\react_cnode\\src\\store\\actionTypes.js\r\n */\r\nexport const SET_SEARCH_STATUS = 'setSearchStatus'\r\nexport const SET_LOADING_STATUS = 'setLoadingStatus'\r\n// 获取首页list\r\nexport const INDEX_GET_LIST = 'indexGetList'\r\n// 页码\r\nexport const SAVE_PAGE_INDEX = 'savePageIndex'\r\n// 保存频道页tab\r\nexport const SAVE_PAGE_TAB = 'savePageTab'\r\n// 保存频道页tabindex\r\nexport const SAVE_TAB_INDEX ='saveTabIndex'\r\n// 保存文章页数据\r\nexport const SAVE_TOPCS_CONTENT = 'saveTopcsContent'\r\n// 保存登录后返回用户信息\r\nexport const SAVE_USERINFO = 'saveUserInfo'\r\n// 保存登录弹窗状态\r\nexport const SAVE_LOGIN_DIALOG = 'saveLoginDialog'\r\n// 修改tips状态\r\nexport const CHANGE_TIPS_STATUS = 'changeTipsStatus'\r\n// 修改tips text\r\nexport const CHANGE_TIPS_TEXT = 'changeTipsText'","/*\r\n * @Author: your name\r\n * @Date: 2021-06-21 16:37:15\r\n * @LastEditTime: 2021-07-09 16:34:36\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\mapcoded:\\study\\React项目\\react_cnode\\src\\store\\reducer.js\r\n */\r\n// 引入name\r\nimport {\r\n  SET_SEARCH_STATUS,\r\n  SET_LOADING_STATUS,\r\n  INDEX_GET_LIST,\r\n  SAVE_PAGE_INDEX,\r\n  SAVE_PAGE_TAB,\r\n  SAVE_TAB_INDEX,\r\n  SAVE_TOPCS_CONTENT,\r\n  SAVE_USERINFO,\r\n  SAVE_LOGIN_DIALOG,\r\n  CHANGE_TIPS_STATUS,\r\n  CHANGE_TIPS_TEXT\r\n} from './actionTypes'\r\n\r\n// 设置默认数据\r\nconst defaultState = {\r\n  // 当前用户信息\r\n  userInfoData: {},\r\n  // 用户登录弹窗\r\n  isLoginDialog: false,\r\n  // 搜索栏是否展开\r\n  searchStatus: false,\r\n  // loading是否显示\r\n  loadingStatus: true,\r\n  // 首页数据\r\n  allIndexData: [],\r\n  // 热门话题\r\n  hotIndexData: [],\r\n  // 冷门话题\r\n  coldIndexData: [],\r\n  // 活跃用户\r\n  userIndexData: [],\r\n  // 页码\r\n  pageIndex: 0,\r\n  // 频道页数据\r\n  pageTab: 'all',\r\n  // 频道页inedx\r\n  tabIndex: 0,\r\n  // 文章页数据\r\n  topcsContent: {},\r\n  // tips\r\n  tipsStatus: false,\r\n  // tips text\r\n  tipsText: ''\r\n}\r\n\r\nlet reducer = (state = defaultState, action) => {\r\n  // state 为自定义默认值\r\n  // action 为actioncreaturs推送的值\r\n  switch (action.type) {\r\n    // 修改input宽度值\r\n    case SET_SEARCH_STATUS:\r\n      return Object.assign({}, state, {\r\n        searchStatus: action.value\r\n      })\r\n    // 修改loading状态\r\n    case SET_LOADING_STATUS:\r\n      return Object.assign({}, state, {\r\n        loadingStatus: action.value\r\n      })\r\n    // 获取首页数据\r\n    case INDEX_GET_LIST:\r\n      return Object.assign({}, state, {\r\n        // 所有数据\r\n        allIndexData: action.data.all,\r\n        // 热门回复\r\n        hotIndexData: action.data.hot,\r\n        // 冷门话题\r\n        coldIndexData: action.data.cold,\r\n        // 活跃用户\r\n        userIndexData: action.data.user\r\n      })\r\n    // 保存频道页数据\r\n    case SAVE_PAGE_TAB:\r\n      return Object.assign({}, state, {\r\n        pageTab: action.value\r\n      })\r\n    // 保存频道页tabindex\r\n    case SAVE_TAB_INDEX:\r\n      return Object.assign({}, state, {\r\n        tabIndex: action.index\r\n      })\r\n    // 保存文章页数据\r\n    case SAVE_TOPCS_CONTENT:\r\n      return Object.assign({}, state, {\r\n        topcsContent: action.value\r\n      })\r\n\r\n    // 设置页码\r\n    case SAVE_PAGE_INDEX:\r\n      return Object.assign({}, state, {\r\n        pageIndex: action.value - 1\r\n      })\r\n\r\n    // 保存登录弹窗状态\r\n    case SAVE_LOGIN_DIALOG:\r\n      return Object.assign({}, state, {\r\n        isLoginDialog: action.value\r\n      })\r\n    \r\n    // 保存用户登录信息\r\n    case SAVE_USERINFO:\r\n      return Object.assign({}, state, {\r\n        userInfoData: action.value\r\n      })\r\n\r\n\r\n    // 修改tips状态\r\n    case CHANGE_TIPS_STATUS:\r\n      return Object.assign({}, state, {\r\n        tipsStatus: action.value\r\n      })\r\n\r\n    // 修改tips文字\r\n    case CHANGE_TIPS_TEXT:\r\n      return Object.assign({}, state, {\r\n        tipsText: action.value\r\n      })\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer","// 引入 createaStore 方法, 入中间件 applyMiddleware\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\n\r\n// 引入reducer\r\nimport reducer from './reducer'\r\n\r\n// 引入thunk库\r\nimport thunk from 'redux-thunk'\r\n\r\n// 为了dev tools也使用，所以需要构造一个增强函数\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(thunk))\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  enhancer\r\n)\r\n\r\nexport default store","/*\r\n * @Author: your name\r\n * @Date: 2021-06-22 14:15:48\r\n * @LastEditTime: 2021-07-07 16:25:00\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\mapcoded:\\study\\React项目\\react_cnode\\src\\server\\index.js\r\n */\r\nimport axios from 'axios'\r\n// 引入store\r\nimport store from '../store'\r\nimport {\r\n  loadingStatusAction,\r\n  changeTipStatusAction,\r\n  changeTipTextAction\r\n} from '../store/actionCreates'\r\n// 是否允许携带验证\r\naxios.defaults.withCredentials = true\r\n\r\n// 创建axios实例\r\nconst server = axios.create({\r\n  // 接口地址\r\n  // 发布环境\r\n  // baseURL: process.env.API_ROOT\r\n  // 开发环境\r\n  baseURL: '/',\r\n  // 响应时长\r\n  timeout: 30000,\r\n  // 请求头\r\n  headers: {\r\n    'Accept': 'application/json',\r\n    'Content-type': 'application/json'\r\n  }\r\n})\r\n\r\n\r\n// 请求拦截器\r\nserver.interceptors.request.use(config => {\r\n  const action = loadingStatusAction(true)\r\n  store.dispatch(action)\r\n  // 请求数据之前的操作，例如添加遮罩\r\n  return config\r\n}, err => {\r\n  return Promise.reject(err)\r\n})\r\n\r\n// 响应拦截器\r\nserver.interceptors.response.use(res => {\r\n  // 响应数据之后的操作，例如取消遮罩\r\n  const action = loadingStatusAction(false)\r\n  store.dispatch(action)\r\n  return res.data\r\n}, err => {\r\n  const actionStatus = changeTipStatusAction(true)\r\n  const actionText = changeTipTextAction(JSON.parse(err.request.responseText).error_msg)\r\n  store.dispatch(actionStatus)\r\n  store.dispatch(actionText)\r\n  return Promise.reject(err)\r\n})\r\n\r\nexport default server","/*\r\n * @Author: your name\r\n * @Date: 2021-06-22 14:54:07\r\n * @LastEditTime: 2021-07-09 15:54:02\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n */\r\nimport server from './index'\r\n\r\n// 接口格式如下\r\n// export const testApi = (params) => {\r\n//   return server({\r\n//     url: '/api',\r\n//     method: 'GET',\r\n//     // params 会显示到url里, data不会显示到url里\r\n//     params: {\r\n//       params\r\n//     }\r\n//   })\r\n// }\r\n\r\n/*\r\n * @description: 首页列表函数\r\n * @param {\r\n *  页码 page, \r\n *  主题分类 tab, \r\n *  每页数量 limit, 是\r\n *  否出现所有markdown格式文本 默认为true\r\n * }\r\n * @return {*}\r\n */\r\nexport const getTopics = (\r\n  page,\r\n  tab,\r\n  limit,\r\n  mdrender\r\n) => {\r\n  return server({\r\n    url: '/topics',\r\n    method: 'GET',\r\n    params: {\r\n      page,\r\n      tab,\r\n      limit,\r\n      mdrender\r\n    }\r\n  })\r\n}\r\n\r\n// 主题详情\r\nexport const getTopicsInfo = (\r\n  id\r\n) => {\r\n  return server({\r\n    url: `/topic/${id}`,\r\n    method: 'GET'\r\n  })\r\n}\r\n\r\n// 用户登录\r\nexport const postAccesstoken = (\r\n  token\r\n) => {\r\n  return server({\r\n    url: '/accesstoken',\r\n    method: 'POST',\r\n    data: {\r\n      accesstoken: token\r\n    }\r\n  })\r\n}\r\n\r\n// 新建评论\r\nexport const postNewReplies = (\r\n  // token\r\n  accesstoken,\r\n  // 内容\r\n  content,\r\n  // id, 如果是对另一个评论的回复，要带上此字段\r\n  topic_id\r\n) => {\r\n  return server({\r\n    url: `/topic/${topic_id}/replies`,\r\n    method: 'POST',\r\n    data: {\r\n      accesstoken,\r\n      content\r\n    }\r\n  })\r\n}\r\n\r\n// 为评论点赞\r\nexport const postReplyUps = (\r\n  accesstoken,\r\n  // 评论id\r\n  reply_id\r\n) => {\r\n  return server({\r\n    url: `/reply/${reply_id}/ups`,\r\n    method: 'POST',\r\n    data: {\r\n      accesstoken\r\n    }\r\n  })\r\n}\r\n\r\n // 用户最近收藏话题\r\nexport const getUserCollect = (\r\n  loginname\r\n) => {\r\n  return server({\r\n    url: `/topic_collect/${loginname}`,\r\n    method: 'GET'\r\n  })\r\n}\r\n\r\n\r\n// 收藏主题\r\nexport const postTopicCollect = (\r\n  // token\r\n  accesstoken,\r\n  // 主题id\r\n  topic_id\r\n) => {\r\n  return server({\r\n    url: '/topic_collect/collect',\r\n    method: 'POST',\r\n    data: {\r\n      accesstoken,\r\n      topic_id\r\n    }\r\n  })\r\n}\r\n\r\n// 取消收藏主题\r\nexport const postTopicUnCollect = (\r\n  accesstoken,\r\n  topic_id\r\n) => {\r\n  return server({\r\n    url: '/topic_collect/de_collect',\r\n    method: 'POST',\r\n    data: {\r\n      accesstoken,\r\n      topic_id\r\n    }\r\n  })\r\n}\r\n\r\n// 发表新话题\r\n export const postTopics = (\r\n   // token\r\n   accesstoken,\r\n   // 标题\r\n   title,\r\n   // tab, 分类，暂时只提供客户端测试发帖\r\n   tab,\r\n   // 主题内容\r\n   content\r\n ) => {\r\n   return server({\r\n     url: '/topics',\r\n     method: 'POST',\r\n     data: {\r\n       accesstoken,\r\n       title,\r\n       tab,\r\n       content\r\n     }\r\n   })\r\n }\r\n\r\n // 用户详情\r\n export const getUserInfo = (\r\n   // 用户名\r\n   loginname\r\n ) => {\r\n   return server({\r\n     url: `/user/${loginname}`,\r\n     method: 'GET'\r\n   })\r\n }\r\n","/*\r\n * @Author: your name\r\n * @Date: 2021-06-21 16:44:54\r\n * @LastEditTime: 2021-07-07 18:49:46\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\mapcoded:\\study\\React项目\\react_cnode\\src\\store\\actionCreates.js\r\n */\r\nimport {\r\n  SET_SEARCH_STATUS,\r\n  SET_LOADING_STATUS,\r\n  INDEX_GET_LIST,\r\n  SAVE_PAGE_INDEX,\r\n  SAVE_PAGE_TAB,\r\n  SAVE_TAB_INDEX,\r\n  SAVE_TOPCS_CONTENT,\r\n  SAVE_USERINFO,\r\n  SAVE_LOGIN_DIALOG,\r\n  CHANGE_TIPS_STATUS,\r\n  CHANGE_TIPS_TEXT\r\n} from './actionTypes'\r\n\r\nimport storage from '../utils/storage'\r\n\r\n// 引入api\r\nimport {\r\n  // 首页列表请求\r\n  getTopics,\r\n  // 文章详情请求\r\n  getTopicsInfo,\r\n  // 登录\r\n  postAccesstoken\r\n} from '../server/api'\r\n\r\n// 控制搜索栏是否展示\r\nexport const searchStatusAction = (value) => ({\r\n  type: SET_SEARCH_STATUS,\r\n  value\r\n})\r\n\r\n// 控制loading是否显示\r\nexport const loadingStatusAction = (value) => ({\r\n  type: SET_LOADING_STATUS,\r\n  value\r\n})\r\n\r\n// 获取首页数据action\r\nexport const getListAction = (data) => ({\r\n  type: INDEX_GET_LIST,\r\n  data\r\n})\r\n\r\n// 修改页码\r\nexport const changePageIndexAction = (value) => ({\r\n  type: SAVE_PAGE_INDEX,\r\n  value\r\n})\r\n\r\n// 保存频道页\r\nexport const changeTabDataAction = (value) => ({\r\n  type: SAVE_PAGE_TAB,\r\n  value\r\n})\r\n\r\n// 保存频道页tabindex\r\nexport const changeTabIndexAction = (index) => ({\r\n  type: SAVE_TAB_INDEX,\r\n  index\r\n})\r\n\r\n\r\n// 获取文章页数据\r\nexport const getTopcsContentData = (value) => ({\r\n  type : SAVE_TOPCS_CONTENT,\r\n  value\r\n})\r\n\r\n// 保存用户登录信息\r\nexport const saveLoginUserInfoAction = (value) => ({\r\n  type: SAVE_USERINFO,\r\n  value\r\n})\r\n\r\n// 保存登录弹窗状态\r\nexport const saveLoginDialogAction = (value) => ({\r\n  type: SAVE_LOGIN_DIALOG,\r\n  value\r\n})\r\n\r\n// tips显示\r\nexport const changeTipStatusAction = (value) => ({\r\n  type: CHANGE_TIPS_STATUS,\r\n  value\r\n})\r\n// tips 文字\r\nexport const changeTipTextAction = (value) => ({\r\n  type: CHANGE_TIPS_TEXT,\r\n  value\r\n})\r\n\r\n\r\n// 中间件获取数据\r\n// 利用中间件获取首页数据\r\nexport const getHomeData = (props) => {\r\n  return async (dispatch) => {\r\n    const res = await getTopics(\r\n      props.page,\r\n      props.tab,\r\n      props.limit,\r\n      props.mark\r\n    )\r\n    let data = JSON.parse(JSON.stringify(res.data))\r\n    // 热门回复\r\n    const hot = res.data.sort((a, b) => {\r\n      return b.visit_count - a.visit_count\r\n    })\r\n    // 冷门回复\r\n    const cold = JSON.parse(JSON.stringify(hot)).reverse()\r\n    // 活跃用户\r\n    const user = res.data.filter((item, index) => {\r\n      return index < 12\r\n    })\r\n    const obj = {\r\n      all: data,\r\n      hot: hot,\r\n      cold: cold,\r\n      user: user\r\n    }\r\n    const action = getListAction(obj)\r\n    dispatch(action)\r\n  }\r\n}\r\n\r\n\r\n// 利用中间件获取文章详情数据\r\nexport const getTopicInfoData = (id) => {\r\n  return async (dispatch) => {\r\n    const res = await getTopicsInfo(id)\r\n    const action = getTopcsContentData(res.data)\r\n    dispatch(action)\r\n  }\r\n}\r\n\r\n// 利用中间件获取用户登录信息\r\nexport const getLoginUserInfo = (token) => {\r\n  console.log(token)\r\n  return async (dispatch) => {\r\n    const res = await postAccesstoken(token)\r\n    console.log(res)\r\n    // 如果登录成功\r\n    if (res && res.success) {\r\n      // 用户信息保存至sessionStorage\r\n      storage.setSession('userInfo', { ...res, token})\r\n      // 同时保存至redux\r\n      const action = saveLoginUserInfoAction({ ...res, token })\r\n      dispatch(action)\r\n      // 修改登录弹窗状态\r\n      const actionLoginStatus = saveLoginDialogAction(false)\r\n      dispatch(actionLoginStatus)\r\n    }\r\n    \r\n  }\r\n}","/*\r\n * @Author: your name\r\n * @Date: 2021-06-25 15:11:47\r\n * @LastEditTime: 2021-07-08 17:43:21\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\mapcoded:\\study\\React项目\\react_cnode\\src\\utils\\utils.js\r\n */\r\n// 公用工具函数库\r\n\r\nimport store from '../store'\r\nimport storage from '../utils/storage'\r\nimport {\r\n  saveLoginDialogAction\r\n} from '../store/actionCreates'\r\n// 根据类型获取中文\r\nexport const transTypes = (top, good, value) => {\r\n  let type = ''\r\n  if (top) {\r\n    type = '置顶'\r\n  } else if (good) {\r\n    type = '精华'\r\n  } else {\r\n    switch (value) {\r\n      case 'all':\r\n        type = '全部'\r\n        break\r\n      case 'good':\r\n        type = '精华'\r\n        break\r\n      case 'share':\r\n        type = '分享'\r\n        break\r\n      case 'ask':\r\n        type = '问答'\r\n        break\r\n      case 'job':\r\n        type = '招聘'\r\n        break\r\n      case 'dev':\r\n        type = '客户端测试'\r\n        break\r\n      default:\r\n        type = ''\r\n    }\r\n  }\r\n  return type \r\n}\r\n\r\n// 换算时间, 格式，几日前\r\nexport const transTime = (time) => {\r\n  if (!time) {\r\n    return false\r\n  }\r\n\r\n  // 先定义1分钟，1小时，1天，1年，\r\n  // 1分钟\r\n  const min = 60 * 1000\r\n  // 1小时\r\n  const hour = 60 * min\r\n  // 1天\r\n  const day = 24 * hour\r\n  // 1个月\r\n  const month = 30 * day\r\n  // 1年\r\n  const year = 12 * month\r\n  // 转换时间\r\n  let t = new Date(time)\r\n  // 现在时间减去以前的时间 = 差值\r\n  let diff = new Date().getTime() - t\r\n  // 定义字符串，用来存放最后的返回值\r\n  let obj = ''\r\n  // 如果差值year的毫秒数，则属于\r\n  if (diff > year) {\r\n    let n = Math.floor(diff / year)\r\n    obj = `${n} 年前`\r\n  } else if (diff > month) {\r\n    let n = Math.floor(diff / month)\r\n    obj = `${n} 个月前`\r\n  } else if (diff > day) {\r\n    let n = Math.floor(diff / day)\r\n    obj = `${n} 天前`\r\n  } else if (diff > hour) {\r\n    let n = Math.floor(diff / hour)\r\n    obj = `${n} 小时前`\r\n  } else if (diff > min) {\r\n    let n = Math.floor(diff / min)\r\n    obj = `${n} 分钟前`\r\n  } else {\r\n    obj = '刚刚'\r\n  }\r\n  return obj\r\n}\r\n\r\n// 判断是否登录\r\nexport const isLoginFunc = () => {\r\n  if (storage.getSession('userInfo') || store.getState().userInfoData?.id) {\r\n    return true\r\n  } else {\r\n    let action = saveLoginDialogAction(true)\r\n    store.dispatch(action)\r\n  }\r\n}","/*\r\n * @Author: your name\r\n * @Date: 2021-06-21 14:20:48\r\n * @LastEditTime: 2021-07-09 16:33:03\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\mapcoded:\\study\\React项目\\react_cnode\\src\\components\\Header.js\r\n */\r\nimport React, { Component } from 'react'\r\n\r\n// 引入react-router\r\nimport { Link } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {isLoginFunc} from '../utils/utils'\r\nclass Header extends Component {\r\n  render() { \r\n    return ( \r\n      <div className='header'>\r\n        <div className='w1440 ct'>\r\n          <div className='fl ct'>\r\n            <span className='logo'>\r\n              <i className='iconfont icon-logo'></i>\r\n            </span>\r\n          </div>\r\n          <div className='fr ml ct'>\r\n            <div className='searchTop'>\r\n              <input type='text' placeholder='请输入搜索项...' className={this.props.topSearchStatus ? 'w100' : ''} />\r\n              <i onClick={this.props.setTopSearch} className='iconfont icon-search'></i>\r\n            </div>\r\n            <ul>\r\n              <li>\r\n                <Link to='/'>首页</Link>\r\n              </li>\r\n              {/* <li>\r\n                <Link to='/getstart'>新手入门</Link>\r\n              </li> */}\r\n              {/* <li>\r\n              <Link to='/apipage'>API</Link>\r\n            </li> */}\r\n              <li>\r\n                <Link to='/about'>关于</Link>\r\n              </li>\r\n              {/* <li>\r\n                <a href='https://github.com/signup?source=login'>注册</a>\r\n              </li> */}\r\n              {\r\n                this.props.userInfoData?.id ? \r\n                (\r\n                  <li className='logincz'>\r\n                    <span className='img'>\r\n                        <img src={this.props.userInfoData?.author?.avatar_url} alt = '' />\r\n                    </span>\r\n                  </li>\r\n                )\r\n                :\r\n                (\r\n                    <li onClick={() => isLoginFunc()}>\r\n                      <font>登录</font>\r\n                  </li>\r\n                )\r\n              }\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n     );\r\n  }\r\n}\r\n\r\n// state 转为属性\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userInfoData: state.userInfoData\r\n  }\r\n}\r\n// dispatch 转为属性\r\nconst mapDispatchToProps = () => {\r\n  return {\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","/*\r\n * @Author: your name\r\n * @Date: 2021-06-24 14:17:16\r\n * @LastEditTime: 2021-06-28 18:19:42\r\n * @LastEditors: your name\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\mapcoded:\\study\\React项目\\react_cnode\\src\\components\\Footer.js\r\n */\r\n/*\r\n * @Author: your name\r\n * @Date: 2021-06-24 14:17:16\r\n * @LastEditTime: 2021-06-28 16:44:03\r\n * @LastEditors: your name\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\mapcoded:\\study\\React项目\\react_cnode\\src\\components\\Footer.js\r\n */\r\nimport React from 'react'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className = 'footer'>\r\n      <div className = 'w1440'>\r\n        <p>\r\n          Copyright © 2021-6-24 DoLeet. 当前呈现版本 v1.0\r\n        </p>\r\n        <p>\r\n          该项目为仿CNode社区开发的React版，版权所有：个人学习项目\r\n          <i className= 'iconfont icon-github'></i>\r\n        </p>\r\n        <p>\r\n          CNode 社区为国内最专业的 Node.js 开源技术社区，致力于 Node.js 的技术研究。\r\n        </p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer","/*\r\n * @Author: your name\r\n * @Date: 2021-07-06 19:18:02\r\n * @LastEditTime: 2021-07-08 17:42:56\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\mapcoded:\\study\\React项目\\react_cnode\\src\\components\\Login.js\r\n */\r\nimport React, { Component, Fragment } from 'react';\r\n\r\n// react-redux\r\nimport { connect } from 'react-redux'\r\n\r\nimport {\r\n  saveLoginDialogAction,\r\n  getLoginUserInfo\r\n} from '../store/actionCreates'\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      tokenValue: ''\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className = 'loginDialog' >\r\n          <div className='bg' onClick={this.props.changeIsLoginDialog}></div>\r\n          <div className = 'con'>\r\n            <h2>\r\n              登录\r\n              <i onClick={this.props.changeIsLoginDialog} className= 'iconfont icon-guanbi'></i>\r\n            </h2>\r\n            <h4>\r\n              <input \r\n                value={this.state.tokenValue}\r\n                onChange = { this.inputChange.bind(this) }\r\n                placeholder= '请输入accesstoken' />\r\n            </h4>\r\n            <h6>\r\n              如何获取 accessToken? 用户登录后，在设置页面可以看到自己的 accessToken\r\n            </h6>\r\n            <p>\r\n              <button onClick = {this.submitLogin.bind(this)}>\r\n                登录\r\n              </button>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </Fragment >\r\n     );\r\n  }\r\n  // 双向绑定\r\n  inputChange(e) {\r\n    this.setState({\r\n      tokenValue: e.target.value\r\n    })\r\n  }\r\n\r\n  submitLogin() {\r\n    if (this.state.tokenValue) {\r\n      this.props.goLogin(this.state.tokenValue)\r\n    }\r\n  }\r\n}\r\n\r\n// state 转属性\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoginDialog: state.isLoginDialog\r\n  }\r\n}\r\n\r\n// dispatch 转属性\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // 改变弹窗的状态\r\n    changeIsLoginDialog() {\r\n      const action = saveLoginDialogAction(false)\r\n      dispatch(action)\r\n    },\r\n    // 登录\r\n    goLogin(token) {\r\n      const action = getLoginUserInfo(token)\r\n      dispatch(action)\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","/*\r\n * @Author: your name\r\n * @Date: 2021-07-07 15:47:22\r\n * @LastEditTime: 2021-07-08 16:40:24\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\mapcoded:\\study\\React项目\\react_cnode\\src\\components\\Tips.js\r\n */\r\nimport React, {Component} from 'react';\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  changeTipStatusAction\r\n} from '../store/actionCreates'\r\nclass Tips extends Component {\r\n  render() { \r\n    let { tipsText } = this.props\r\n    return ( \r\n      <div className='tips'>\r\n        {tipsText}\r\n      </div>\r\n     );\r\n  }\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.props.changeStatus(false)\r\n    }, 5000);\r\n  }\r\n}\r\n\r\n// 属性转trops\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tipsText: state.tipsText\r\n  }\r\n}\r\n\r\n// 属性转props\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changeStatus(status) {\r\n      const action = changeTipStatusAction(status)\r\n      dispatch(action)\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tips)","/*\r\n * @Author: your name\r\n * @Date: 2021-06-25 16:59:01\r\n * @LastEditTime: 2021-06-28 15:28:59\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\mapcoded:\\study\\React项目\\react_cnode\\src\\components\\paging.js\r\n */\r\n// 分页\r\nimport React, { Component } from 'react'\r\nimport store from '../store'\r\n\r\nimport {\r\n  // 获取首页列表各项数据\r\n  getHomeData,\r\n  // 修改页码\r\n  changePageIndexAction\r\n} from '../store/actionCreates'\r\n\r\nclass Paging extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = store.getState()\r\n    // 组件发生更新\r\n    this.storeChange = this.storeChange.bind(this)\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='paging'>\r\n        <div className='con'>\r\n          <span className='prevItem'>\r\n            <i className='iconfont icon-shangyiye'></i>\r\n          </span>\r\n          <ul>\r\n            {\r\n              [...Array(5)].map((item, index) => {\r\n                return <li className={this.state.pageIndex === index ? 'cur' : ''}  onClick={() => {\r\n                  this.changePage(index + 1)\r\n                }} key={index + 1000}>{index + 1}</li>\r\n              })\r\n            }\r\n          </ul>\r\n          <span className='nextItem'>\r\n            <i className='iconfont icon-xiayiye1'></i>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  storeChange() {\r\n    this.setState(store.getState())\r\n  }\r\n\r\n  // 修改页码\r\n  changePage(index) {\r\n    console.log(index)\r\n    const action = changePageIndexAction(index)\r\n    store.dispatch(action)\r\n    this.getData({\r\n      page: index,\r\n      tab: this.state.pageTab,\r\n      limit: 20,\r\n      mark: true\r\n    })\r\n  }\r\n\r\n  // 从actionCreate页面拿到获取数据的getHomeData中间件函数\r\n  getData(props) {\r\n    const action = getHomeData(props)\r\n    store.dispatch(action)\r\n  }\r\n}\r\n\r\n\r\nexport default Paging","/*\r\n * @Author: your name\r\n * @Date: 2021-06-22 18:58:45\r\n * @LastEditTime: 2021-07-02 14:39:52\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\mapcoded:\\study\\React项目\\react_cnode\\src\\components\\ImgTextList.js\r\n */\r\n\r\n// 图文列表\r\nimport React, { Fragment } from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n// 引入工具函数\r\nimport { transTypes, transTime } from '../utils/utils'\r\n// 分页\r\nimport Paging from '../components/paging'\r\n\r\nconst ImgTextList = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <div className='indexImgList'>\r\n        <ul>\r\n          {\r\n            props.dataJson?.map((item, index) => {\r\n              return (\r\n                <li className={item.top ? 'tops' : ''} key={item.id + index}>\r\n                  <div className='txtDiv'>\r\n                    <h4 className={item.good ? 'goods' : ''}>\r\n                      <span className='tag'>\r\n                        {\r\n                          transTypes(item.top, item.good, item.tab)\r\n                        }\r\n                      </span>\r\n                      |\r\n                      <span className='authorInfo'>\r\n                        <Link to={'/userinfo/' + item.id}>\r\n                          <img src={item.author?.avatar_url} alt='' />\r\n                          <font className='name'>\r\n                              {item.author?.loginname}\r\n                          </font>\r\n                        </Link>\r\n                      </span>\r\n                      |\r\n                      <span className='time'>\r\n                        {transTime(item.create_at)}\r\n                      </span>\r\n                    </h4>\r\n                    <div className='title'>\r\n                      <Link to={'/listinfo/' + item.id}>\r\n                        {item.title}\r\n                      </Link>\r\n                    </div>\r\n                    <h6>\r\n                      <span className='icon'>\r\n                        <i className='iconfont icon-chakan'>\r\n                        </i>\r\n                        {item.visit_count}\r\n                      </span>\r\n                      <span className='icon'>\r\n                        <i className='iconfont icon-006pinglunhuifu'>\r\n                        </i>\r\n                        {item.reply_count}\r\n                      </span>\r\n                    </h6>\r\n                  </div>\r\n                  <div className='imgDiv'>\r\n                    <img src={item.author?.avatar_url} alt='' />\r\n                  </div>\r\n                </li>\r\n              )\r\n            })\r\n          }\r\n        </ul>\r\n      </div>\r\n      <Paging />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ImgTextList","import React from 'react';\r\n\r\n// 载入\r\nconst Loading = () => {\r\n  return (\r\n    <div className = 'loadingArea'>\r\n      <span></span>\r\n      <span></span>\r\n      <span></span>\r\n      <span></span>\r\n      <span></span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loading","/*\r\n * @Author: your name\r\n * @Date: 2021-06-22 17:40:33\r\n * @LastEditTime: 2021-07-02 14:40:02\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n */\r\n\r\n// 文字列表组件\r\n\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst TextList = (props) => {\r\n  return (\r\n    <ul className = 'textList'>\r\n      {\r\n        props.dataJSon && props.dataJSon.slice(0, 5).map(item => {\r\n          return (\r\n            <li key = {item.id}>\r\n              <Link to={'/listinfo/' + item.id}>\r\n                {item.title}\r\n              </Link>\r\n            </li>\r\n          )\r\n        })\r\n      }\r\n      \r\n      \r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default TextList","/*\r\n * @Author: your name\r\n * @Date: 2021-06-24 19:31:21\r\n * @LastEditTime: 2021-07-09 14:47:36\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\mapcoded:\\study\\React项目\\react_cnode\\src\\components\\UserList.js\r\n */\r\n\r\n// 用户列表组件\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nconst UserList = (props) => {\r\n  return (\r\n    <ul>\r\n      {\r\n        props.dataJSon && props.dataJSon.map(item => {\r\n          return (\r\n            <li key={item.id}>\r\n              <Link to={'/userinfo/' + item.author?.loginname}>\r\n                <span>\r\n                  <img src={item.author?.avatar_url} alt ='' />\r\n                </span>\r\n                <p>\r\n                  {item.author?.loginname}\r\n                </p>\r\n              </Link>\r\n            </li>\r\n          )\r\n        })\r\n      }\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default UserList","/*\r\n * @Author: your name\r\n * @Date: 2021-07-02 14:48:54\r\n * @LastEditTime: 2021-07-02 14:50:16\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\mapcoded:\\study\\React项目\\react_cnode\\src\\components\\DownClient.js\r\n */\r\nimport React from 'react';\r\n\r\nconst DownClient = () => {\r\n  return (\r\n    <div className='box clineQr'>\r\n      <div className='title'>\r\n        <i className='iconfont icon-tubiaolunkuo- cold'></i>\r\n        客户端下载\r\n      </div>\r\n      <div className='con'>\r\n        <img alt='' src='https://static.cnodejs.org/FtG0YVgQ6iginiLpf9W4_ShjiLfU' />\r\n        <p>扫描二维码下载</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n \r\nexport default DownClient;","/*\r\n * @Author: your name\r\n * @Date: 2021-06-21 14:14:01\r\n * @LastEditTime: 2021-07-09 16:11:53\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\mapcoded:\\study\\React项目\\react_cnode\\src\\pages\\Index\\Index.js\r\n */\r\nimport React, { Component, Fragment } from 'react'\r\n// 引入react-router\r\nimport { Link } from 'react-router-dom'\r\n\r\n// 图文列表\r\nimport ImgTextList from '../../components/ImgTextList'\r\nimport store from '../../store'\r\n\r\n// Loading\r\nimport Loading from '../../components/Loading'\r\n// 文字列表\r\nimport TextList from '../../components/TextList'\r\n// 活跃用户组件\r\nimport UserList from '../../components/UserList'\r\n// 客户端下载\r\nimport DownClient from '../../components/DownClient'\r\n// react-redux\r\nimport { connect } from 'react-redux'\r\n\r\nimport {\r\n  // 获取首页列表各项数据\r\n  getHomeData,\r\n  // 修改页码\r\n  changePageIndexAction,\r\n  // 保存频道\r\n  changeTabDataAction,\r\n  // 保存频道index\r\n  changeTabIndexAction\r\n} from '../../store/actionCreates'\r\n\r\n\r\nclass Index extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    // 拿到store数据\r\n    this.state = store.getState()\r\n  }\r\n  \r\n  // 组件挂载之前\r\n  componentDidMount() {\r\n    // 优先获取首页数据\r\n    this.props.getData({\r\n      page: 1,\r\n      tab: 'all',\r\n      limit: 20,\r\n      mark: true\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className = 'fl'>\r\n          <div className='box topTab'>\r\n            <ul>\r\n              {\r\n                this.props.tabList.map((item, index) => {\r\n                  return (\r\n                    <li className={this.props.tabIndex === index ? 'cur' : ''} key = { index } onClick = {() => {\r\n                      this.changeTabIndex(index, item)\r\n                    }}>\r\n                      {item.title}\r\n                    </li>\r\n                  )\r\n                })\r\n              }\r\n            </ul>\r\n            {\r\n              this.props.userInfoData?.id?\r\n              (\r\n                <span className='issueTopic'>\r\n                  <Link to='/newtopic'>\r\n                    发布新话题\r\n                  </Link>\r\n                </span>\r\n              )\r\n              :\r\n              null\r\n            }\r\n            \r\n          </div>\r\n          <div className = 'box'>\r\n            {\r\n              this.props.loadingStatus ? (\r\n                <Loading />\r\n              ) : (\r\n                <div>\r\n                  <ImgTextList\r\n                      dataJson={this.props.allIndexData}\r\n                  />\r\n                </div>\r\n              )\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className = 'fr'>\r\n          <div className = 'box activeUser'>\r\n            <div className = 'title'>\r\n              <i className='iconfont icon-yonghu'></i>\r\n              活跃用户\r\n            </div>\r\n            <div className = 'con'>\r\n              <UserList \r\n                dataJSon={this.props.userIndexData}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className = 'box hotTopic'>\r\n            <div className = 'title'>\r\n              <i className='iconfont icon-huati hot'></i> 热门话题\r\n            </div>\r\n            <div className = 'con'>\r\n              <TextList\r\n                dataJSon={this.props.hotIndexData}\r\n                />\r\n            </div>\r\n          </div>\r\n          <div className='box zeroTopic'>\r\n            <div className='title'>\r\n              <i className='iconfont icon-huati cold'></i> 无人回复话题\r\n            </div>\r\n            <div className='con'>\r\n              <TextList \r\n                dataJSon={this.props.coldIndexData}\r\n              />\r\n            </div>\r\n          </div>\r\n          <DownClient />\r\n        </div>\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  // 重新获取tab数据\r\n  changeTabIndex(index, item) {\r\n    this.props.changeTabIndexData(index)\r\n    setTimeout(() => {\r\n      // 修改页码\r\n      this.props.changePageIndexData(1)\r\n      // 保存当前tab\r\n      this.props.changePageTabData(item.tab)\r\n      this.props.getData({\r\n        page: this.state.pageIndex + 1,\r\n        tab: item.tab,\r\n        limit: 20,\r\n        mark: true\r\n      })\r\n    }, 0);\r\n  }\r\n}\r\n\r\n\r\n\r\n// 映射属性\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    // loading\r\n    loadingStatus: state.loadingStatus,\r\n    // 频道页index\r\n    tabIndex: state.tabIndex,\r\n    // 所有数据\r\n    allIndexData: state.allIndexData,\r\n    // 用户数据\r\n    userIndexData: state.userIndexData,\r\n    // 热门帖子\r\n    hotIndexData: state.hotIndexData,\r\n    // 冷门帖子\r\n    coldIndexData: state.coldIndexData,\r\n    // 搜索栏是否展开\r\n    searchStatus: state.searchStatus,\r\n    // 用户信息\r\n    userInfoData: state.userInfoData,\r\n    tabList: [\r\n      {\r\n        title: '全部',\r\n        tab: 'all'\r\n      },\r\n      {\r\n        title: '精华',\r\n        tab: 'good'\r\n      },\r\n      {\r\n        title: '分享',\r\n        tab: 'share'\r\n      },\r\n      {\r\n        title: '问答',\r\n        tab: 'ask'\r\n      },\r\n      {\r\n        title: '招聘',\r\n        tab: 'job'\r\n      },\r\n      {\r\n        title: '客户端测试',\r\n        tab: 'dev'\r\n      }\r\n    ]\r\n  }\r\n}\r\n\r\n// 映射方法为props属性\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // 修改页码\r\n    changePageIndexData(index) {\r\n      const action = changePageIndexAction(index)\r\n      dispatch(action)\r\n    },\r\n    // 保存频道index\r\n    changeTabIndexData(index) {\r\n      const action = changeTabIndexAction(index)\r\n      store.dispatch(action)\r\n    },\r\n    // 保存频道\r\n    changePageTabData(value) {\r\n      const action = changeTabDataAction(value)\r\n      dispatch(action)\r\n    },\r\n\r\n    // 获取数据\r\n    // 从actionCreate页面拿到获取数据的getHomeData中间件函数\r\n    getData(props) {\r\n      const action = getHomeData(props)\r\n      dispatch(action)\r\n    },\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Index)","// 新手入门\r\nimport React, { Component } from 'react';\r\nclass GetStart extends Component {\r\n  render() { \r\n    return ( \r\n      <div>\r\n        我是新手入门页面\r\n      </div>\r\n     );\r\n  }\r\n}\r\n \r\nexport default GetStart;","// api页面\r\nimport React, { Component } from 'react';\r\nclass ApiPage extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        我是api页面\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ApiPage;","/*\r\n * @Author: your name\r\n * @Date: 2021-06-21 15:54:24\r\n * @LastEditTime: 2021-07-09 16:17:35\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\mapcoded:\\study\\React项目\\react_cnode\\src\\pages\\About\\About.js\r\n */\r\n// 关于\r\nimport React, { Component } from 'react';\r\nclass About extends Component {\r\n  render() {\r\n    return (\r\n      <div className = 'aboutus'>\r\n        <div className = 'box '>\r\n          <h3>\r\n            关于本项目\r\n          </h3>\r\n          <p>\r\n            该项目为仿CNode社区开发的React版，旨在学习React所用。\r\n          </p>\r\n          <p>\r\n            项目所用技术: React、React-Rouer、Redux、React-Redux、Axios、Redus-thunk、wangeditor\r\n          </p>\r\n          <p>\r\n            感谢CNode提供接口\r\n          </p>\r\n        </div>\r\n        <div className = 'box'>\r\n          <h3>\r\n            关于CNode\r\n          </h3>\r\n          <p>\r\n            CNode 社区为国内最大最具影响力的 Node.js 开源技术社区，致力于 Node.js 的技术研究。\r\n          </p>\r\n          <p>\r\n            CNode 社区由一批热爱 Node.js 技术的工程师发起，目前已经吸引了互联网各个公司的专业技术人员加入，我们非常欢迎更多对 Node.js 感兴趣的朋友。\r\n          </p>\r\n          <p>\r\n            CNode 的 SLA 保证是，一个9，即 90.000000%。\r\n          </p>\r\n          <p>\r\n            社区目前由 @alsotang 在维护，有问题请联系：https://github.com/alsotang\r\n          </p>\r\n          <p>\r\n            请关注我们的官方微博：http://weibo.com/cnodejs\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;","// 登录\r\nimport React, { Component } from 'react';\r\nclass Login extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        我是登录页面\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;","/*\r\n * @Author: your name\r\n * @Date: 2021-07-02 14:32:18\r\n * @LastEditTime: 2021-07-09 16:00:44\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\mapcoded:\\study\\React项目\\react_cnode\\src\\components\\AboutAuthor.js\r\n */\r\n\r\n\r\n// 关于作者组件\r\nimport React from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst AboutAuthor = (props) => {\r\n  return (\r\n    <div className='aauthorCon'>\r\n      <div className='top'>\r\n        <Link to={'/userinfo/' + props.dataJson?.loginname}>\r\n          <span className='img'>\r\n            <img src={props.dataJson?.avatar_url} alt='' />\r\n          </span>\r\n          <span className='txt'>\r\n            {props.dataJson?.loginname}\r\n          </span>\r\n        </Link>\r\n      </div>\r\n      <p className='jifen'>\r\n        积分: {props.point}\r\n      </p>\r\n      <p className='jianj'>\r\n        “ 这家伙很懒，什么个性签名都没有留下。 ”\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\nexport default AboutAuthor;","/*\r\n * @Author: your name\r\n * @Date: 2021-07-06 17:17:32\r\n * @LastEditTime: 2021-07-09 10:52:31\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\mapcoded:\\study\\React项目\\react_cnode\\src\\components\\Comment.js\r\n */\r\nimport React, { Component, Fragment } from 'react';\r\nimport {\r\n  saveLoginDialogAction,\r\n} from '../store/actionCreates'\r\n\r\nimport {\r\n  postNewReplies\r\n} from '../server/api'\r\n\r\n// react-redux\r\nimport { connect } from 'react-redux'\r\n\r\nimport {\r\n  isLoginFunc\r\n} from '../utils/utils'\r\n\r\nclass Comment extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      valueText: ''\r\n    }\r\n  }\r\n  render() { \r\n    return ( \r\n      <div className = 'commentSubmit'>\r\n        <Fragment>\r\n          {\r\n            this.props.userInfoData?.id ? (\r\n              <Fragment>\r\n                <div className = 'hImg'>\r\n                  <span className = 'timg'>\r\n                    <img src={this.props.userInfoData?.avatar_url} alt = '' />\r\n                  </span>\r\n                  <p>\r\n                    {this.props.userInfoData?.loginname}\r\n                  </p>\r\n                </div>\r\n              </Fragment>\r\n            ): (\r\n              <span className='img'>\r\n                <i className='iconfont icon-yonghu1'>\r\n                </i>\r\n              </span>\r\n            )\r\n          }\r\n          \r\n        </Fragment>\r\n        <div className = 'txt'>\r\n          <textarea \r\n            value={this.state.valueText}\r\n            onChange = {this.changeValue.bind(this)}\r\n          placeholder = '请输入评论...' onFocus = {this.isLogin.bind(this)} />\r\n          <p>\r\n            <button onClick={this.submitText.bind(this)}>提交</button>\r\n          </p>\r\n        </div>\r\n      </div>\r\n     );\r\n  }\r\n  // 是否登录\r\n  isLogin() {\r\n    // console.log('12')\r\n    // this.props.changeLoginDialogStatus(true)\r\n    if (!this.props.userInfoData?.id) {\r\n      this.props.changeLoginDialogStatus(true)\r\n    }\r\n  }\r\n  // 双向绑定\r\n  changeValue(e) {\r\n    this.setState({\r\n      valueText: e.target.value\r\n    })\r\n  }\r\n  // 提交评论\r\n  submitText() {\r\n    if (isLoginFunc()) {\r\n      this.newRepliesFunc(\r\n        // 用户token\r\n        this.props.userInfoData?.token,\r\n        this.state.valueText,\r\n        this.props?.id\r\n      )\r\n    }\r\n  }\r\n  // 评论接口\r\n  async newRepliesFunc (token, content, topic_id) {\r\n    const res = await postNewReplies(token, content, topic_id)\r\n    if (res?.success) {\r\n      this.props.getData(topic_id)\r\n      this.setState({\r\n        valueText: ''\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n// state 转为属性\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userInfoData: state.userInfoData\r\n  }\r\n}\r\n// dispatch 转为属性\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // 改变登录弹窗的状态\r\n    changeLoginDialogStatus(status) {\r\n      const action = saveLoginDialogAction(status)\r\n      dispatch(action)\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Comment);","/*\r\n * @Author: your name\r\n * @Date: 2021-07-02 15:10:08\r\n * @LastEditTime: 2021-07-08 17:45:40\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\mapcoded:\\study\\React项目\\react_cnode\\src\\components\\ReplyCon.js\r\n */\r\nimport React, {Component} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport Comment from './Comment'\r\nimport { transTime, isLoginFunc } from '../utils/utils'\r\n\r\n// api\r\nimport {\r\n  postReplyUps\r\n} from '../server/api'\r\n\r\nclass ReplyCon extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      // 区分多个点赞变量\r\n      zanSatus: true\r\n    }\r\n  }\r\n  render() {\r\n    let {id, getData, dataJson} = this.props\r\n    return ( \r\n      <div className='replyCon '>\r\n        <div className='box'>\r\n          <Comment id={id} getData={getData} />\r\n        </div>\r\n        <div className='box'>\r\n          <div className='title'>\r\n            <i className='iconfont icon-huifu' ></i>\r\n            {dataJson?.length} 条回复\r\n          </div>\r\n          <div className='con'>\r\n            <ul>\r\n              {\r\n                dataJson?.map((item, index) => {\r\n                  return (\r\n                    <li key={item.id}>\r\n                      <span className='img'>\r\n                        <img src={item.author?.avatar_url} alt='' />\r\n                      </span>\r\n                      <div className='txt'>\r\n                        <h5>\r\n                          <span className='louc'>\r\n                            #{index + 1}楼\r\n                          </span>\r\n                          <span className='name'>\r\n                            {item.author?.loginname}\r\n                          </span>\r\n                          <span className='time'>\r\n                            {transTime(item.create_at)}\r\n                          </span>\r\n                          <span className='dianz'>\r\n                            {\r\n                              item.ups.length ?\r\n                               (\r\n                                 item.ups.map(i => {\r\n                                   if (i === this.props.userInfoData.id) {\r\n                                     return (\r\n                                       <i className='iconfont icon-dianzan1 aaaa'\r\n                                       key = {i + 100}\r\n                                       onClick={() => { this.upsdian(item) }}></i>\r\n                                     )\r\n                                   } else {\r\n                                     return (\r\n                                       <i \r\n                                       key = {i + 100}className='iconfont icon-dianzan bbbb' onClick={() => { this.upsdian(item) }}></i>\r\n                                     )\r\n                                   }\r\n                                   \r\n                                 })\r\n                               )\r\n                               :\r\n                               (\r\n                                  <i style={{ top: '-12px'}} className='iconfont\r\n                                  icon-dianzan zzzz' onClick={() => { this.upsdian(item) }}></i>\r\n                               )\r\n                            }\r\n                            {item.ups.length > 0 ? item.ups.length : ''}\r\n                          </span>\r\n                        </h5>\r\n                        <div className='rc'>\r\n                          <div\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: item.content\r\n                            }}\r\n                          ></div>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  )\r\n                })\r\n              }\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n     )\r\n  }\r\n  upsdian(item) {\r\n    // 判断是否登录\r\n    if (isLoginFunc()) {\r\n      this.replyUpsFunc(\r\n        this.props.userInfoData?.token,\r\n        item?.id\r\n      )\r\n    }\r\n  }\r\n  // 点赞api\r\n  async replyUpsFunc(accessToken, reply_id) {\r\n    const res = await postReplyUps(accessToken, reply_id)\r\n    console.log(res)\r\n    if (res?.success) {\r\n      this.props.getData(this.props.id)\r\n    }\r\n  }\r\n}\r\n\r\n// state 转为属性\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userInfoData: state.userInfoData\r\n  }\r\n}\r\n// dispatch 转为属性\r\nconst mapDispatchToProps = () => {\r\n  return {\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReplyCon);","/*\r\n * @Author: your name\r\n * @Date: 2021-06-29 19:51:29\r\n * @LastEditTime: 2021-07-09 10:26:00\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\mapcoded:\\study\\React项目\\react_cnode\\src\\pages\\ListInfo.js\r\n */\r\nimport React, { Component, Fragment } from 'react';\r\n// import store from '../../store'\r\n\r\n// react-redux\r\nimport { connect } from 'react-redux'\r\n// 引入工具函数\r\nimport { transTypes, transTime } from '../../utils/utils'\r\n// 引入组件\r\n// 关于作者\r\nimport AboutAuthor from '../../components/AboutAuthor';\r\n// 客户端下载\r\nimport DownClient from '../../components/DownClient'\r\n// 回复\r\nimport ReplyCon from '../../components/ReplyCon'\r\n// 引入公用函数或者中间件\r\nimport {\r\n  // 获取文章详情数据\r\n  getTopicInfoData\r\n} from '../../store/actionCreates'\r\n// Loading\r\nimport Loading from '../../components/Loading'\r\n\r\n// api\r\nimport {\r\n  // 收藏主题\r\n  postTopicCollect,\r\n  // 取消收藏主题\r\n  postTopicUnCollect\r\n} from '../../server/api'\r\n\r\nimport {\r\n  // 判断是否登录\r\n  isLoginFunc\r\n} from '../../utils/utils'\r\n\r\nclass ListInfo extends Component {\r\n  render() {\r\n    let { topcsContent, getData }  = this.props\r\n    return ( \r\n      <Fragment>\r\n        {/* {this.state.id} */}\r\n        <div className = 'fl'>\r\n          <div className = 'box listInfo'>\r\n            {\r\n              this.props.topcsContent.id !== this.props.match.params.id ? (\r\n                <Loading />\r\n              ) : (\r\n                <Fragment>\r\n                  <h3>\r\n                    {topcsContent.title}\r\n                  </h3>\r\n                  <div className='author'>\r\n                    <span className='at'>\r\n                      <i>\r\n                        <img src={topcsContent.author?.avatar_url} alt='' />\r\n                      </i>\r\n                      {topcsContent.author?.loginname}\r\n                    </span>\r\n                    <span className='review'>\r\n                      {topcsContent.visit_count} 次阅读\r\n                    </span>\r\n                    <span className='time'>\r\n                      {transTime(topcsContent.create_at)}\r\n                    </span>\r\n                    <span className='tab'>\r\n                      {transTypes('', '', topcsContent.tab)}\r\n                    </span>\r\n                  </div>\r\n                  <div className='listContent'>\r\n                    <div\r\n                      dangerouslySetInnerHTML={{\r\n                        __html: topcsContent.content\r\n                      }}\r\n                    >\r\n\r\n                    </div>\r\n                  </div>\r\n                  <div className='shouc'>\r\n                    {\r\n                        topcsContent.is_collect ? \r\n                        (\r\n                          <Fragment>\r\n                            <span onClick = {() => {\r\n                                this.unCollectHandle(topcsContent.id)\r\n                            }}>\r\n                                <i className='iconfont icon-shoucang1'>\r\n                              </i>\r\n                            </span>\r\n                            <p>\r\n                              已收藏\r\n                            </p>\r\n                          </Fragment>\r\n                        )\r\n                        :\r\n                        (\r\n                            <Fragment>\r\n                              <span onClick={() => {\r\n                                this.collectHandle(topcsContent.id)\r\n                              }}>\r\n                                <i className='iconfont icon-shoucang'>\r\n                                </i>\r\n                              </span>\r\n                              <p>\r\n                                收藏主题\r\n                              </p>\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                    \r\n                  </div>\r\n                </Fragment>\r\n              )\r\n            }\r\n          </div>\r\n          {/* 回复 */}\r\n          <ReplyCon\r\n            dataJson={topcsContent.replies}\r\n            id={topcsContent.id}\r\n            getData={getData}\r\n          />\r\n        </div>\r\n        <div className = 'fr'>\r\n          <div className = 'box'>\r\n            <div className='title'>\r\n              <i className='iconfont icon-yonghu'></i>\r\n              关于作者\r\n            </div>\r\n            <AboutAuthor\r\n              dataJson={topcsContent.author}\r\n              point={topcsContent.visit_count}\r\n            />\r\n          </div>\r\n          {/* 客户端下载 */}\r\n          <DownClient />\r\n        </div>\r\n      </Fragment>\r\n     );\r\n  }\r\n  componentDidMount() {\r\n    let id = this.props.match.params.id\r\n    this.setState({\r\n      id: id\r\n    })\r\n    this.props.getData(id)\r\n  }\r\n\r\n  // 收藏主题\r\n  collectHandle(id) {\r\n    if (isLoginFunc()) {\r\n      this.collectData(this.props.userInfoData?.token, id)\r\n    } \r\n    \r\n  }\r\n  // 取消收藏主题\r\n  unCollectHandle(id) {\r\n    if (isLoginFunc()) {\r\n      this.collectData(this.props.userInfoData?.token, id)\r\n    }\r\n    \r\n  }\r\n\r\n  // 收藏主题接口\r\n  // token, topicId 主题id\r\n  async collectData(token, topicId) {\r\n    const res = await postTopicCollect(token, topicId)\r\n    console.log(res)\r\n  }\r\n  // 取消收藏主题接口\r\n  async unCollectData(token, topicId) {\r\n    const res = await postTopicUnCollect(token, topicId) \r\n    console.log(res)\r\n  }\r\n}\r\n\r\n// state转为属性\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    topcsContent: state.topcsContent,\r\n    userInfoData: state.userInfoData\r\n  }\r\n}\r\n\r\n// dispatch 转为属性\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getData(id) {\r\n      const action = getTopicInfoData(id)\r\n      dispatch(action)\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListInfo);","/*\r\n * @Author: your name\r\n * @Date: 2021-07-09 15:28:13\r\n * @LastEditTime: 2021-07-09 16:33:16\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\mapcoded:\\study\\React项目\\react_cnode\\src\\components\\myList.js\r\n */\r\nimport React, { Component } from 'react';\r\n// 引入工具函数\r\nimport { transTime } from '../utils/utils'\r\nimport {Link} from 'react-router-dom'\r\nclass MyList extends Component {\r\n  render() { \r\n    return ( \r\n      <div className = 'myList'>\r\n        <ul>\r\n          {\r\n            this.props.dataJson?.map(item => {\r\n              return (\r\n                <li key = {item.id}>\r\n                  <span className='img'>\r\n                    <img src={item.author?.avatar_url} alt = '' />\r\n                  </span>\r\n                  <Link to={'/listinfo/' + item.id}>\r\n                    {item.title}\r\n                  </Link>\r\n                  <span className='time'>\r\n                    {transTime(item.last_reply_at)}\r\n                  </span>\r\n                </li>\r\n              )\r\n            })\r\n          }\r\n          \r\n        </ul>\r\n      </div>\r\n     );\r\n  }\r\n}\r\n \r\nexport default MyList;","/*\r\n * @Author: your name\r\n * @Date: 2021-07-01 16:12:28\r\n * @LastEditTime: 2021-07-09 16:34:14\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\mapcoded:\\study\\React项目\\react_cnode\\src\\pages\\UserInfo\\UserInfo.js\r\n */\r\nimport React, { Component } from 'react';\r\n\r\n// 关于作者\r\nimport AboutAuthor from '../../components/AboutAuthor';\r\n// 列表\r\nimport MyList from '../../components/MyList'\r\n// 客户端\r\nimport DownClient from '../../components/DownClient'\r\nimport {\r\n  // 获取用户信息\r\n  getUserInfo,\r\n  // 获取用户收藏话题\r\n  getUserCollect\r\n} from '../../server/api'\r\n// Loading\r\nclass UserInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // 用户信息 \r\n      userInfo: {},\r\n      // 用户收藏话题\r\n      userCollect: []\r\n    }\r\n  }\r\n  render() { \r\n    return ( \r\n      <div className = 'userInfo'>\r\n        <div className='fl'>\r\n          <div className='box'>\r\n            <div className='title'>\r\n              <i className='iconfont icon-yonghu'></i>\r\n              收藏话题\r\n            </div>\r\n              <MyList\r\n                dataJson={this.state.userCollect}\r\n              />\r\n          </div>\r\n          <div className = 'box'>\r\n            <div className='title'>\r\n              <i className='iconfont icon-yonghu hot'></i>\r\n              最近参与的话题\r\n            </div>\r\n            <MyList \r\n              dataJson={this.state.userInfo && this.state.userInfo.recent_replies}\r\n            />\r\n          </div>\r\n          <div className='box'>\r\n            <div className='title'>\r\n              <i className='iconfont icon-yonghu cold'></i>\r\n              最近创建话题\r\n            </div>\r\n            <MyList \r\n              dataJson={this.state.userInfo && this.state.userInfo.recent_topics}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className = 'fr'>\r\n          <div className = 'box'>\r\n            <div className='title'>\r\n              <i className='iconfont icon-yonghu'></i>\r\n              关于作者\r\n            </div>\r\n            <AboutAuthor\r\n              dataJson={{\r\n                loginname: this.state.userInfo.loginname,\r\n                avatar_url: this.state.userInfo.avatar_url\r\n              }}\r\n              point={this.state.userInfo.score}\r\n            />\r\n          </div>\r\n          {/* 客户端下载 */}\r\n          <DownClient />\r\n        </div>\r\n      </div>\r\n     );\r\n  }\r\n  componentDidMount() {\r\n    this.getUserInfoData(this.props.match.params.id)\r\n    this.getUserCollectData(this.props.match.params.id)\r\n  }\r\n\r\n  // 获取用户详情接口\r\n  // id 为用户名\r\n  async getUserInfoData(id) {\r\n    const res = await getUserInfo(id)\r\n    if (res && res.success) {\r\n      this.setState({\r\n        userInfo: res.data\r\n      })\r\n    }\r\n  }\r\n  // 用户收藏话题\r\n  async getUserCollectData(id) {\r\n    const res = await getUserCollect(id)\r\n    if (res && res.success) {\r\n      this.setState({\r\n        userCollect: res.data\r\n      })\r\n    }\r\n  }\r\n}\r\n \r\nexport default UserInfo;","/*\r\n * @Author: your name\r\n * @Date: 2021-07-09 10:36:22\r\n * @LastEditTime: 2021-07-09 16:33:59\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\mapcoded:\\study\\React项目\\react_cnode\\src\\pages\\NewTopic\\NewTopic.js\r\n */\r\nimport React, { Component } from 'react';\r\n\r\n// wangeditor\r\nimport ReactWEditor from 'wangeditor-for-react'\r\n\r\n// 引入react-redux\r\nimport { connect } from 'react-redux'\r\n\r\n// api\r\nimport {\r\n  postTopics\r\n} from '../../server/api'\r\n\r\n// 引入工具函数\r\nimport {\r\n  isLoginFunc\r\n} from '../../utils/utils'\r\n\r\n\r\nclass NewTopic extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      // 标题\r\n      titleValue: '',\r\n      // 富文本内容\r\n      editorValue: '',\r\n    }\r\n  }\r\n  render() { \r\n    return ( \r\n      <div className = 'newTopic'>\r\n        <div className = 'box title'>\r\n          <div className='fr'>\r\n            <span>\r\n              所属分类:\r\n            </span>\r\n            <select disabled>\r\n              <option>客户端测试</option>\r\n            </select>\r\n          </div>\r\n          <div className = 'fl'>\r\n            <input \r\n              value={this.state.titleValue}\r\n              onChange = {(e) => this.changeValue(e)}\r\n            placeholder = '请输入标题,10个字以上' />\r\n          </div>\r\n        </div>\r\n        <div className = 'box newTContent'>\r\n          <ReactWEditor\r\n            editorValue={this.state.editorValue}\r\n            placeholder = '请输入话题内容'\r\n            onChange = {(html) => {\r\n              this.setState({\r\n                editorValue: html\r\n              })\r\n            }}\r\n          ></ReactWEditor>\r\n          <p className = 'botBtn'>\r\n            <button className= 'submit' onClick = {this.submitTopic.bind(this)}>\r\n              提交\r\n            </button>\r\n            <button>\r\n              清空\r\n            </button>\r\n          </p>\r\n        </div>\r\n      </div>\r\n     );\r\n  }\r\n  // 提交话题\r\n  submitTopic() {\r\n    // 是否登录\r\n    if (isLoginFunc()) {\r\n      this.issueTopicsFunc(\r\n        // token\r\n        this.props.userInfoData?.token,\r\n        // 标题\r\n        this.state.titleValue,\r\n        // 分类\r\n        'dev',\r\n        // 内容\r\n        this.state.editorValue\r\n      )\r\n    }\r\n    \r\n  }\r\n  \r\n  // input双向绑定\r\n  changeValue(e) {\r\n    this.setState({\r\n      titleValue: e.target.value\r\n    })\r\n  }\r\n\r\n  // 组件离开页面时触发\r\n  componentWillUnmount() {\r\n  }\r\n\r\n  // 发表新话题接口\r\n  async issueTopicsFunc (\r\n    // token\r\n    token,\r\n    // 标题\r\n    title,\r\n    // 分类，暂时只支持客户端测试发帖。即dev\r\n    tab,\r\n    // 内容\r\n    content\r\n  ) {\r\n    const res = await postTopics(token, title, tab, content)\r\n    if (res?.success) {\r\n      this.setState({\r\n        titleValue: '',\r\n        editorValue: ''\r\n      })\r\n      console.log('跳转')\r\n      this.props.history.push(`/listinfo/${res.topic_id}`)\r\n    }\r\n  }\r\n}\r\n\r\n// state 转为属性\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userInfoData: state.userInfoData\r\n  }\r\n}\r\n// dispatch 转为属性\r\nconst mapDispatchToProps = () => {\r\n  return {\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewTopic);","/*\r\n * @Author: your name\r\n * @Date: 2021-06-21 15:47:46\r\n * @LastEditTime: 2021-07-09 10:40:44\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\mapcoded:\\study\\React项目\\react_cnode\\src\\pages\\App.js\r\n */\r\n// 主框架页面\r\nimport React, { Component } from 'react';\r\n\r\n// 引入路由\r\nimport { BrowserRouter as Router,  Route } from 'react-router-dom' \r\n\r\n// react-redux\r\nimport { connect } from 'react-redux'\r\n\r\n// 工具\r\nimport storage from '../utils/storage'\r\n\r\n// 公用组件\r\n// 顶部\r\nimport Header from '../components/Header'\r\n// 底部\r\nimport Footer from '../components/Footer'\r\n// 登录弹窗\r\nimport LoginDialog from '../components/Login'\r\n// 提示框\r\nimport Tips from '../components/Tips'\r\n// 引入页面组件\r\nimport Index from './Index/Index'\r\n// 新手入门\r\nimport GetStart from './GetStart/GetStart'\r\n// Api\r\nimport ApiPage from './ApiPage/ApiPage'\r\n// 关于\r\nimport About from './About/About'\r\n// 登录\r\nimport Login from './Login/Login'\r\n// 文字列表详情\r\nimport ListInfo from './ListInfo/ListInfo'\r\n// 用户列表详情\r\nimport UserInfo from './UserInfo/UserInfo'\r\n// 发布话题\r\nimport NewTopic from './NewTopic/NewTopic'\r\n\r\n// 引入redux, store\r\nimport store from '../store'\r\nimport {\r\n  // 控制搜索栏是否显示\r\n  searchStatusAction,\r\n  // 保存用户信息\r\n  saveLoginUserInfoAction\r\n} from '../store/actionCreates'\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    // 绑定this\r\n    // this.setTopSearch = this.setTopSearch.bind(this)\r\n    // 拿到store里的数据\r\n    this.state = store.getState()\r\n    // 让组件发生更新\r\n    // this.storeChange = this.storeChange.bind(this)\r\n    // store.subscribe(this.storeChange)\r\n  }\r\n  render() {\r\n    let { isLoginDialog, tipsStatus } = this.props\r\n    return (\r\n      <div className='main'>\r\n        <Router>\r\n          <Header\r\n            topSearchStatus={this.props.searchStatus}\r\n            setTopSearch={this.props.setTopSearch(!this.props.searchStatus)}\r\n          />\r\n          <div className='content'>\r\n            <div className= 'w1440 flex'>\r\n              <Route path='/' exact component={Index} />\r\n              <Route path='/getstart' component={GetStart} />\r\n              <Route path='/apipage' component={ApiPage} />\r\n              <Route path='/about' component={About} />\r\n              <Route path='/login' component={Login} />\r\n              <Route path='/listinfo/:id' component={ListInfo}></Route>\r\n              <Route path='/userinfo/:id' component={UserInfo}></Route>\r\n              <Route path='/newtopic' component={NewTopic} />\r\n            </div>\r\n          </div>\r\n        </Router>\r\n        {/* 底部 */}\r\n        <Footer />\r\n        {/* 登录 */}\r\n        {\r\n          isLoginDialog ? (\r\n            <LoginDialog />\r\n          ) : null\r\n        }\r\n        {/* 提示框 */}\r\n        {\r\n          tipsStatus ? (\r\n            <Tips />\r\n          ): null\r\n        }\r\n      </div>\r\n     );\r\n  }\r\n  componentDidMount() {\r\n    // 保存状态\r\n    if (storage.getSession('userInfo') && storage.getSession('userInfo').id) {\r\n      this.props.changeUserInfo(storage.getSession('userInfo'))\r\n    }\r\n  }\r\n}\r\n\r\n// state 转属性\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoginDialog: state.isLoginDialog,\r\n    tipsStatus: state.tipsStatus,\r\n    userInfoData: state.userInfoData\r\n  }\r\n}\r\n// 映射方法为props属性\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // 修改顶部搜索框\r\n    setTopSearch(status) {\r\n      const action = searchStatusAction(status)\r\n      dispatch(action)\r\n    },\r\n    // 保存用户信息\r\n    changeUserInfo(value) {\r\n      const action = saveLoginUserInfoAction(value)\r\n      dispatch(action)\r\n    }\r\n  }\r\n}\r\n\r\n// export default App;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './scss/style.scss'\nimport App from './pages/App';\n// react-redux\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nconst Root = (\n  <Provider store = { store }>\n    <App />\n  </Provider>\n)\n\nReactDOM.render(\n  Root,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}